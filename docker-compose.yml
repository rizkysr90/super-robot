# for local development
version: "3.9"
services:
  restapi:
    image: "golang:1.22-bookworm"
    restart: on-failure
    ports:
      - "8080:8080/tcp"
    volumes:
      - ./:/app
    working_dir: /app
    depends_on:
      postgres:
        condition: service_started
      db-migration:
        condition: service_completed_successfully
    environment:
      - CGO_ENABLED=0
      - GO111MODULE=on
      - GOFLAGS=-mod=vendor
    env_file:
      - .env
    command: /bin/bash -c  "git config --global --add safe.directory /app && make build/restapi && ./build/restapi"
  db-migration:
    image: "amacneil/dbmate:2.9"
    restart: "on-failure"
    volumes:
      - ./:/app
    working_dir: /app
    depends_on:
      postgres:
        condition: service_started
    environment:
      - DATABASE_URL=postgres://root:root@postgres:5432/pos_rizki?sslmode=disable
      - DBMATE_MIGRATIONS_DIR=/app/resources/pgsql/migrations
      - DBMATE_NO_DUMP_SCHEMA=true
      - DBMATE_VERBOSE=true
      - DBMATE_STRICT=true
      - DBMATE_WAIT=true
      - DBMATE_WAIT_TIMEOUT=60s
    command: up
    # ------------------------------------------ DB BROWSER WEB APP ------------------------------------------
  adminer:
    container_name: adminer
    image: adminer:4-standalone
    restart: on-failure
    depends_on:
      postgres:
        condition: service_started
    ports:
      - "8888:8080/tcp"
  # ------------------------------------------ INFRASTRUCTURES ------------------------------------------
  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: on-failure
    volumes:
      - postgres-data:/var/lib/postgresql/data
    expose:
      - 5432
    environment:
      - POSTGRES_DB=pos_rizki
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
  redis:
    container_name: redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: on-failure
    environment:
      - REDIS_PORT=6379
      - REDIS_USERNAME=redis_user
      - REDIS_PASSWORD=redis_password
      - REDIS_DB=0
    volumes:
      - redis-data:/data
    command: redis-server --requirepass redis_password --user redis_user on >redis_password ~* &* +@all --port 6379 --bind 0.0.0.0 --save 60 1 --loglevel warning
volumes:
  postgres-data:
  redis-data:
